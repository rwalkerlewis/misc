[pylithapp.metadata]
# This is not a self-contained simulation configuration file. This
# file only specifies the general parameters common to the simulations
# in this directory.
keywords = [example, 2D, strike slip]
features = [
    Triangular cells,
    pylith.meshio.MeshIOPetsc,
    pylith.problems.TimeDependent,
    pylith.materials.Poroelasticity,
    pylith.materials.IsotropicLinearPoroelasticity,
    pylith.faults.FaultCohesiveKinPoro,
    pylith.faults.KinSrcPoroStep,
    field split preconditioner,
    Schur complement preconditioner,
    pylith.bc.DirichletTimeDependent,
    spatialdata.spatialdb.UniformDB,
    pylith.meshio.OutputSolnBoundary,
    pylith.meshio.DataWriterHDF5
    ]

# ----------------------------------------------------------------------
# journal
# ----------------------------------------------------------------------
[pylithapp.journal.info]
timedependent = 1
solution = 1
meshiopetsc = 1
isotropiclinearporoelasticity = 1
dirichlettimedependent = 1
faultcohesivekinporo = 1
petscoptions = 1

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
reader = pylith.meshio.MeshIOPetsc
reader.filename = mesh_quad.msh
reader.coordsys.space_dim = 2

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.problem]
# Use nonlinear solver to ensure residual and Jacobian are consistent.
solver = nonlinear

# Set the default quadrature order for all subfields.
#
# IMPORTANT: The quadrature order *must* the same for all solution and
# auxiliary subfields. PyLith will verify that this requirement is met.
# This requirement may be relaxed in the future.
defaults.quadrature_order = 1

# Set the discretization for each of the solution subfields.
#
# For a quastistatic simulation with a fault, we have two solution fields:
# (1) displacement and (2) Lagrange multiplier. We use a predefined containter
# to create a solution field with these two subfields.
solution = pylith.problems.SolnDispPresTracStrainLagrangeFaultPres

[pylithapp.problem.solution.subfields]
displacement.basis_order = 2
pressure.basis_order = 1
trace_strain.basis_order = 1
lagrange_fault.basis_order = 2
fault_pressure.basis_order = 2


[pylithapp.problem]
# Scales for nondimensionalization
# We specify a time scale using a fake relaxation time that cooresponds
# to the time scale of the quasi-static simulations.
#normalizer = spatialdata.units.NondimElasticQuasistatic
normalizer.length_scale = 1.0*m
normalizer.relaxation_time = 1.0*s
normalizer.shear_modulus = 1.0*Pa

[pylithapp.problem]
# Output the solution over the domain and on the +y and -y boundaries.
solution_observers = [domain, top_boundary, bot_boundary]
solution_observers.top_boundary = pylith.meshio.OutputSolnBoundary
solution_observers.bot_boundary = pylith.meshio.OutputSolnBoundary

# `label` and `label_value` correspond to the name and tag of the 
# physical groups marking the boundaries in the Gmsh Python script.
[pylithapp.problem.solution_observers.top_boundary]
label = boundary_ypos
label_value = 13

[pylithapp.problem.solution_observers.bot_boundary]
label = boundary_yneg
label_value = 12

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
# Create an array of three materials, matching the number of physical groups
# of materials we created in the Gmsh Python script.

# We use a poroelastic material and linearly poroelastic rheology

[pylithapp.problem]
materials = [poroelastic_xneg, poroelastic_xpos]
materials.poroelastic_xneg = pylith.materials.Poroelasticity
materials.poroelastic_xpos = pylith.materials.Poroelasticity

[pylithapp.problem.materials]
poroelastic_xneg.bulk_rheology = pylith.materials.IsotropicLinearPoroelasticity
poroelastic_xpos.bulk_rheology = pylith.materials.IsotropicLinearPoroelasticity

[pylithapp.problem.materials.poroelastic_xneg]
# `label_value` must match the tag for the physical group in the Gmsh Python script.
description = Material to on the -x side of the fault
label_value = 1

# We will use uniform material properties, so we use the UniformDB spatial database.
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.description = Poroelastic properties
db_auxiliary_field.values = [solid_density, fluid_density, fluid_viscosity, porosity, shear_modulus, drained_bulk_modulus, biot_coefficient, fluid_bulk_modulus, solid_bulk_modulus, isotropic_permeability]
db_auxiliary_field.data   = [ 2500*kg/m**3,  1000*kg/m**3,      0.001*Pa*s,      0.1,        6e9*Pa,              10e9*Pa,              0.8,             2e9*Pa,          20.0e9*Pa,             1e-14*m**2]

auxiliary_subfields.body_force.basis_order = 0
auxiliary_subfields.solid_density.basis_order = 0
auxiliary_subfields.fluid_density.basis_order = 0
auxiliary_subfields.fluid_viscosity.basis_order = 0
auxiliary_subfields.gravitational_acceleration.basis_order = 0
auxiliary_subfields.porosity.basis_order = 0
derived_subfields.cauchy_strain.basis_order = 1
derived_subfields.cauchy_stress.basis_order = 1

[pylithapp.problem.materials.poroelastic_xneg.bulk_rheology]

auxiliary_subfields.drained_bulk_modulus.basis_order = 0
auxiliary_subfields.shear_modulus.basis_order = 0
auxiliary_subfields.biot_coefficient.basis_order = 0
auxiliary_subfields.biot_modulus.basis_order = 0
auxiliary_subfields.isotropic_permeability.basis_order = 0

[pylithapp.problem.materials.poroelastic_xpos]
description = Material to on the +x side of the fault
# label = poroelastic_ypos
label_value = 2

db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.description = Poroelastic properties
db_auxiliary_field.values = [solid_density, fluid_density, fluid_viscosity, porosity, shear_modulus, drained_bulk_modulus, biot_coefficient, fluid_bulk_modulus, solid_bulk_modulus, isotropic_permeability]
db_auxiliary_field.data   = [ 2500*kg/m**3,  1000*kg/m**3,      0.001*Pa*s,      0.1,        6e9*Pa,              10e9*Pa,              0.8,             2e9*Pa,          20.0e9*Pa,             1e-14*m**2]

auxiliary_subfields.body_force.basis_order = 0
auxiliary_subfields.solid_density.basis_order = 0
auxiliary_subfields.fluid_density.basis_order = 0
auxiliary_subfields.fluid_viscosity.basis_order = 0
auxiliary_subfields.gravitational_acceleration.basis_order = 0
auxiliary_subfields.porosity.basis_order = 0
derived_subfields.cauchy_strain.basis_order = 1
derived_subfields.cauchy_stress.basis_order = 1

[pylithapp.problem.materials.poroelastic_xpos.bulk_rheology]

auxiliary_subfields.drained_bulk_modulus.basis_order = 0
auxiliary_subfields.shear_modulus.basis_order = 0
auxiliary_subfields.biot_coefficient.basis_order = 0
auxiliary_subfields.biot_modulus.basis_order = 0
auxiliary_subfields.isotropic_permeability.basis_order = 0

# ----------------------------------------------------------------------
# fault
# ----------------------------------------------------------------------
[pylithapp.problem]
interfaces = [fault]
interfaces.fault = pylith.faults.FaultCohesiveKinPoro

[pylithapp.problem.interfaces.fault]
# The `label` and `label_value` correspond to the name and tag of the
# physical group in the Gmsh Python script.
label = fault
label_value = 20
# Output `slip` on the fault.
observers.observer.data_fields = [slip]
# We will use uniform material properties, so we use the UniformDB
# spatial database.
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.description = Poroelastic fault properties
db_auxiliary_field.values = [thickness, porosity,       beta_p, beta_sigma, fault_permeability_xx, fault_permeability_yy, fault_permeability_zz, fault_permeability_xy, fluid_viscosity]
db_auxiliary_field.data   = [ 0.002*m,     0.068,   1.0*Pa**-1, 1.0*Pa**-1,            1e-13*m**2,            1e-13*m**2,            1e-13*m**2,            1e-13*m**2,      0.001*Pa*s]
# observers.observer.field_filter.basis_order = 1
#observers.observer.data_fields = [slip, lagrange_fault]
#auxiliary_subfields.body_force.basis_order = 0
#observers.observer.data_fields = [slip]


# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
# Create an array of 2 boundary conditions for the +x and -x boundaries.
[pylithapp.problem]
bc = [bc_xneg, bc_xpos]
bc.bc_xneg = pylith.bc.DirichletTimeDependent
bc.bc_xpos = pylith.bc.DirichletTimeDependent

# The `label` and `label_value` correspond to the name and tag of the
# physical group in the Gmsh Python script.
#
# We constrain both the x and y displacement components on the +x and -x
# boundaries, so we set `constrained_dof=[0,1]`.
# We use the specialized `ZeroDB` to specify zero values for the Dirichlet
# BC. We will override this parameter in some of the .cfg files to specify
# nonzero values.
[pylithapp.problem.bc.bc_xpos]
label = boundary_xpos
label_value = 11
constrained_dof = [0, 1]
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.description = Dirichlet BC +x boundary

[pylithapp.problem.bc.bc_xneg]
label = boundary_xneg
label_value = 10
constrained_dof = [0, 1]
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.description = Dirichlet BC -x boundary

# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
[pylithapp.petsc]
malloc_debug = 0

ts_type = beuler

pc_type = fieldsplit
pc_use_amat = true
pc_fieldsplit_0_fields = 0,1
pc_fieldsplit_1_fields = 2,3,4
pc_fieldsplit_type = schur

pc_fieldsplit_schur_factorization_type = full
pc_fieldsplit_schur_precondition = full
pc_fieldsplit_schur_scale = 1.0

fieldsplit_0_ksp_type = gmres
fieldsplit_0_ksp_rtol = 1.0e-10
fieldsplit_0_pc_type  = lu
fieldsplit_1_ksp_type = gmres
fieldsplit_1_ksp_rtol = 1.0e-10
fieldsplit_1_pc_type  = svd

ksp_rtol = 1.0e-10
ksp_atol = 1.0e-12
ksp_max_it = 100
ksp_gmres_restart = 50
ksp_error_if_not_converged = true

snes_rtol = 1.0e-7
snes_atol = 1.0e-10
snes_error_if_not_converged = true

# Monitors for debugging
ts_monitor = true
fieldsplit_0_ksp_monitor_true_residual = true
fieldsplit_1_ksp_monitor_true_residual = true
fieldsplit_1_pc_svd_monitor = true
ksp_monitor_true_residual = true
ksp_converged_reason = true
snes_monitor = true
snes_converged_reason = true
snes_linesearch_monitor = true

#ksp_view = true
#snes_view = true
#Tests

# End of file


