[pylithapp.metadata]
#  y
#  ^
#  |
#   --> x
#
#
#             -----------
#             |         |
# Ux, Uy= 0   |         | Ux, Uy= 0
#             |---------|
#             |         |
#             |         |
#             -----------
#
# Dirichlet boundary conditions
#
# boundary_xneg: Ux = Uy = 0
# boundary_xpos: Ux = Uy = 0
#
# Fault has uniform slip of 2 m.
base = [pylithapp.cfg]
description = Coseismic prescribed slip with zero displacement Dirichlet boundary conditions.
authors = [Brad Aagaard]
keywords = [prescribed slip]
arguments = [step01_slip.cfg]
version = 1.0.0
pylith_version = [>=3.0, <4.0]

features = [
    Static simulation
    ]

# ----------------------------------------------------------------------
# Monitoring and parameter viewing.
# ----------------------------------------------------------------------
[pylithapp]
# You can view this file using the pylith_parameters application or
# online at https://geodynamics.github.io/pylith_parameters/.
dump_parameters.filename = output/step01_slip-parameters.json
problem.progress_monitor.filename = output/step01_slip-progress.txt

# Set the name of the problem that will be used to construct the
# output filenames. The default directory for output is 'output'.
problem.defaults.name = step01_slip

# ----------------------------------------------------------------------
# fault
# ----------------------------------------------------------------------
[pylithapp.problem.interfaces.fault.eq_ruptures.rupture]
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.description = Fault rupture auxiliary field spatial database
db_auxiliary_field.values = [initiation_time, final_slip_left_lateral, final_slip_opening]
db_auxiliary_field.data = [0.0*s, -2.0*m, 0.0*m]


# ----------------------------------------------------------------------
# initial conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
ic = [yneg, ypos, fault]
ic.yneg = pylith.problems.InitialConditionPatch
ic.ypos = pylith.problems.InitialConditionPatch
ic.fault = pylith.problems.InitialConditionPatch

[pylithapp.problem.ic.yneg]
label = patch_yneg
label_value = 31
subfields = [displacement, pressure, trace_strain]
db = spatialdata.spatialdb.AnalyticDB
db.description = Initial MMS conditions over domain
db.values = [displacement_x, displacement_y, pressure, trace_strain]
db.units = [none, none, none, none]
db.expressions = [y*y - 1, y*y, 0*(y*y-1), 2*y]

[pylithapp.problem.ic.ypos]
label = patch_ypos
label_value = 30
subfields = [displacement, pressure, trace_strain]
db = spatialdata.spatialdb.AnalyticDB
db.description = Initial MMS conditions over domain
db.values = [displacement_x, displacement_y, pressure, trace_strain]
db.units = [none, none, none, none]
db.expressions = [1 - y*y, -y*y, 0*(y*y-1), -2*y]

[pylithapp.problem.ic.fault]
# NO LABEL FOR FAULT IC
label_value = 100
subfields = [lagrange_multiplier_fault, fault_pressure]
db = spatialdata.spatialdb.AnalyticDB
db.description = Initial MMS conditions over domain
db.values = [lagrange_multiplier_fault_x, lagrange_multiplier_fault_y, fault_pressure]
db.units = [none, none, none]
db.expressions = [0, 0, 0]


# # ----------------------------------------------------------------------
# # boundary conditions
# # ----------------------------------------------------------------------
# # Create an array of 2 boundary conditions for the +x and -x boundaries.
# [pylithapp.problem]
# bc = [bc_xneg1_disp, bc_xneg2_disp, bc_xpos1_disp, bc_xpos2_disp, bc_yneg_disp, bc_ypos_disp, 
#       bc_xneg1_pres, bc_xneg2_pres, bc_xpos1_pres, bc_xpos2_pres, bc_yneg_pres, bc_ypos_pres]

# bc.bc_xneg1_disp = pylith.bc.DirichletTimeDependent
# bc.bc_xneg2_disp = pylith.bc.DirichletTimeDependent
# bc.bc_xpos1_disp = pylith.bc.DirichletTimeDependent
# bc.bc_xpos2_disp = pylith.bc.DirichletTimeDependent
# bc.bc_yneg_disp = pylith.bc.DirichletTimeDependent
# bc.bc_ypos_disp = pylith.bc.DirichletTimeDependent

# bc.bc_xneg1_pres = pylith.bc.DirichletTimeDependent
# bc.bc_xneg2_pres = pylith.bc.DirichletTimeDependent
# bc.bc_xpos1_pres = pylith.bc.DirichletTimeDependent
# bc.bc_xpos2_pres = pylith.bc.DirichletTimeDependent
# bc.bc_yneg_pres = pylith.bc.DirichletTimeDependent
# bc.bc_ypos_pres = pylith.bc.DirichletTimeDependent

# # The `label` and `label_value` correspond to the name and tag of the
# # physical group in the Gmsh Python script.
# #
# # We constrain both the x and y displacement components on the +x and -x
# # boundaries, so we set `constrained_dof=[0,1]`.
# # We use the specialized `ZeroDB` to specify zero values for the Dirichlet
# # BC. We will override this parameter in some of the .cfg files to specify
# # nonzero values.

# [pylithapp.problem.bc.bc_xneg1_disp]
# label = boundary_xneg1
# label_value = 10
# field = displacement
# constrained_dof = [0, 1]
# db_auxiliary_field = spatialdata.spatialdb.AnalyticDB
# db_auxiliary_field.description = BC xneg1_disp +
# db_auxiliary_field.values = [initial_amplitude_x, initial_amplitude_y]
# db_auxiliary_field.units = [none, none]
# db_auxiliary_field.expressions = [1 - y*y, -y*y]

# [pylithapp.problem.bc.bc_xneg2_disp]
# label = boundary_xneg2
# label_value = 11
# field = displacement
# constrained_dof = [0, 1]
# db_auxiliary_field = spatialdata.spatialdb.AnalyticDB
# db_auxiliary_field.description = BC xneg2_disp -
# db_auxiliary_field.values = [initial_amplitude_x, initial_amplitude_y]
# db_auxiliary_field.units = [none, none]
# db_auxiliary_field.expressions = [y*y - 1, y*y]

# [pylithapp.problem.bc.bc_xpos1_disp]
# label = boundary_xpos1
# label_value = 12
# field = displacement
# constrained_dof = [0, 1]
# db_auxiliary_field = spatialdata.spatialdb.AnalyticDB
# db_auxiliary_field.description = BC xpos1_disp +
# db_auxiliary_field.values = [initial_amplitude_x, initial_amplitude_y]
# db_auxiliary_field.units = [none, none]
# db_auxiliary_field.expressions = [1 - y*y, -y*y]

# [pylithapp.problem.bc.bc_xpos2_disp]
# label = boundary_xpos2
# label_value = 13
# field = displacement
# constrained_dof = [0, 1]
# db_auxiliary_field = spatialdata.spatialdb.AnalyticDB
# db_auxiliary_field.description = BC xpos2_disp -
# db_auxiliary_field.values = [initial_amplitude_x, initial_amplitude_y]
# db_auxiliary_field.units = [none, none]
# db_auxiliary_field.expressions = [y*y - 1, y*y]

# [pylithapp.problem.bc.bc_yneg_disp]
# label = boundary_yneg
# label_value = 14
# field = displacement
# constrained_dof = [0, 1]
# db_auxiliary_field = spatialdata.spatialdb.AnalyticDB
# db_auxiliary_field.description = BC yneg_disp -
# db_auxiliary_field.values = [initial_amplitude_x, initial_amplitude_y]
# db_auxiliary_field.units = [none, none]
# db_auxiliary_field.expressions = [y*y - 1, y*y]

# [pylithapp.problem.bc.bc_ypos_disp]
# label = boundary_ypos
# label_value = 15
# field = displacement
# constrained_dof = [0, 1]
# db_auxiliary_field = spatialdata.spatialdb.AnalyticDB
# db_auxiliary_field.description = BC ypos_disp +
# db_auxiliary_field.values = [initial_amplitude_x, initial_amplitude_y]
# db_auxiliary_field.units = [none, none]
# db_auxiliary_field.expressions = [1 - y*y, -y*y]

# [pylithapp.problem.bc.bc_xneg1_pres]
# label = boundary_xneg1
# label_value = 10
# field = pressure
# constrained_dof = [0]
# db_auxiliary_field = spatialdata.spatialdb.AnalyticDB
# db_auxiliary_field.description = BC xneg1_pres
# db_auxiliary_field.values = [initial_amplitude]
# db_auxiliary_field.units = [none]
# db_auxiliary_field.expressions = [0*(y*y - 1)]

# [pylithapp.problem.bc.bc_xneg2_pres]
# label = boundary_xneg2
# label_value = 11
# field = pressure
# constrained_dof = [0]
# db_auxiliary_field = spatialdata.spatialdb.AnalyticDB
# db_auxiliary_field.description = BC xneg2_pres
# db_auxiliary_field.values = [initial_amplitude]
# db_auxiliary_field.units = [none]
# db_auxiliary_field.expressions = [0*(y*y - 1)]

# [pylithapp.problem.bc.bc_xpos1_pres]
# label = boundary_xpos1
# label_value = 12
# field = pressure
# constrained_dof = [0]
# db_auxiliary_field = spatialdata.spatialdb.AnalyticDB
# db_auxiliary_field.description = BC xpos1_pres
# db_auxiliary_field.values = [initial_amplitude]
# db_auxiliary_field.units = [none]
# db_auxiliary_field.expressions = [0*(y*y - 1)]

# [pylithapp.problem.bc.bc_xpos2_pres]
# label = boundary_xpos2
# label_value = 13
# field = pressure
# constrained_dof = [0]
# db_auxiliary_field = spatialdata.spatialdb.AnalyticDB
# db_auxiliary_field.description = BC xpos2_pres
# db_auxiliary_field.values = [initial_amplitude]
# db_auxiliary_field.units = [none]
# db_auxiliary_field.expressions = [0*(y*y - 1)]

# [pylithapp.problem.bc.bc_yneg_pres]
# label = boundary_yneg
# label_value = 14
# field = pressure
# constrained_dof = [0]
# db_auxiliary_field = spatialdata.spatialdb.AnalyticDB
# db_auxiliary_field.description = BC yneg_pres
# db_auxiliary_field.values = [initial_amplitude]
# db_auxiliary_field.units = [none]
# db_auxiliary_field.expressions = [0*(y*y - 1)]

# [pylithapp.problem.bc.bc_ypos_pres]
# label = boundary_ypos
# label_value = 15
# field = pressure
# constrained_dof = [0]
# db_auxiliary_field = spatialdata.spatialdb.AnalyticDB
# db_auxiliary_field.description = BC ypos_pres
# db_auxiliary_field.values = [initial_amplitude]
# db_auxiliary_field.units = [none]
# db_auxiliary_field.expressions = [0*(y*y - 1)]

# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
[pylithapp.petsc]
ts_type = beuler

pc_type = fieldsplit
pc_use_amat = true
pc_fieldsplit_0_fields = 0,1
pc_fieldsplit_1_fields = 2,3,4
pc_fieldsplit_type = schur

pc_fieldsplit_schur_factorization_type = full
pc_fieldsplit_schur_precondition = full
pc_fieldsplit_schur_scale = 1.0

fieldsplit_0_ksp_type = gmres
fieldsplit_0_ksp_rtol = 1.0e-10
fieldsplit_0_pc_type  = lu
fieldsplit_1_ksp_type = gmres
fieldsplit_1_ksp_rtol = 1.0e-10
fieldsplit_1_pc_type  = svd

ksp_rtol = 1.0e-10
ksp_atol = 1.0e-12
ksp_max_it = 100
ksp_gmres_restart = 50
ksp_error_if_not_converged = true

snes_rtol = 1.0e-7
snes_atol = 1.0e-10
snes_error_if_not_converged = true

# Monitors for debugging
ts_monitor = true
ksp_monitor = true
ksp_converged_reason = true
snes_monitor = true
snes_converged_reason = true
snes_linesearch_monitor = true





# End of file
