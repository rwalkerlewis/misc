[pylithapp.metadata]
#  y
#  ^
#  |
#   --> x
#
#
#             -----------
#             |    |    |
# Ux, Uy= 0   |    |    | Ux, Uy= 0
#             |    |    |
#             |    |    |
#             -----------
#
# Dirichlet boundary conditions
#
# boundary_xneg: Ux = Uy = 0
# boundary_xpos: Ux = Uy = 0
#
# Fault has uniform slip of 2 m.
base = [pylithapp.cfg]
description = Coseismic prescribed slip with zero displacement Dirichlet boundary conditions.
authors = [Brad Aagaard]
keywords = [prescribed slip]
arguments = [step01_slip.cfg]
version = 1.0.0
pylith_version = [>=3.0, <4.0]

features = [
    Static simulation
    ]

# ----------------------------------------------------------------------
# Monitoring and parameter viewing.
# ----------------------------------------------------------------------
[pylithapp]
# You can view this file using the pylith_parameters application or
# online at https://geodynamics.github.io/pylith_parameters/.
dump_parameters.filename = output/step01_slip-parameters.json
problem.progress_monitor.filename = output/step01_slip-progress.txt

# Set the name of the problem that will be used to construct the
# output filenames. The default directory for output is 'output'.
problem.defaults.name = step01_slip

# ----------------------------------------------------------------------
# fault
# ----------------------------------------------------------------------
[pylithapp.problem.interfaces.fault.eq_ruptures.rupture]
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.description = Fault rupture auxiliary field spatial database
db_auxiliary_field.values = [initiation_time, final_slip_left_lateral, final_slip_opening]
db_auxiliary_field.data = [0.0*s, -2.0*m, 0.0*m]

# ----------------------------------------------------------------------
# initial conditions
# ----------------------------------------------------------------------
# We specify a single initial condition that is over the entire domain.
[pylithapp.problem]
ic = [yneg, ypos, fault]
ic.yneg = pylith.problems.InitialConditionPatch
ic.ypos = pylith.problems.InitialConditionPatch
ic.fault = pylith.problems.InitialConditionPatch

[pylithapp.problem.ic.ypos]
label = patch_xpos
label_value = 30
db = spatialdata.spatialdb.AnalyticDB
db.description = Initial MMS conditions over domain
db.values = [displacement_x, displacement_y, pressure, trace_strain, lagrange_fault_x, lagrange_fault_y, fault_pressure]
db.units = [m, m, Pa, none, none, none, Pa]
db.expressions = [y > 0 ? 1 - y*y : y*y - 1, y > 0 ? - y*y : y*y, 0*(y*y-1), y > 0 ? -2*y : 2*y, 0, 0, 0]

[pylithapp.problem.ic.yneg]
label = patch_xneg
label_value = 31
db = spatialdata.spatialdb.AnalyticDB
db.description = Initial MMS conditions over domain
db.values = [displacement_x, displacement_y, pressure, trace_strain, lagrange_fault_x, lagrange_fault_y, fault_pressure]
db.units = [m, m, Pa, none, none, none, Pa]
db.expressions = [y > 0 ? 1 - y*y : y*y - 1, y > 0 ? - y*y : y*y, 0*(y*y-1), y > 0 ? -2*y : 2*y, 0, 0, 0]


# ----------------------------------------------------------------------
# initial conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
ic = [yneg, ypos, fault]
ic.yneg = pylith.problems.InitialConditionPatch
ic.ypos = pylith.problems.InitialConditionPatch
ic.fault = pylith.problems.InitialConditionPatch

[pylithapp.problem.ic.yneg]
label = patch_yneg
label_value = 31
subfields = [displacement, pressure, trace_strain]
db = spatialdata.spatialdb.AnalyticDB
db.description = Initial MMS conditions over domain
db.values = [displacement_x, displacement_y, pressure, trace_strain]
db.units = [m, m, Pa, none]
db.expressions = [1 - y*y, -y*y, 0*(y*y-1),-2*y]

[pylithapp.problem.ic.ypos]
label = patch_ypos
label_value = 30
subfields = [displacement, pressure, trace_strain]
db = spatialdata.spatialdb.AnalyticDB
db.description = Initial MMS conditions over domain
db.values = [displacement_x, displacement_y, pressure, trace_strain]
db.units = [m, m, Pa, none]
db.expressions = [y*y - 1, y*y, 0*(y*y-1), 2*y]

[pylithapp.problem.ic.fault]
label = fault
label_value = 20
subfields = [lagrange_multiplier_fault, fault_pressure]
db = spatialdata.spatialdb.AnalyticDB
db.description = Initial MMS conditions over domain
db.values = [lagrange_fault_x, lagrange_fault_y, fault_pressure]
db.units = [none, none, Pa]
db.expressions = [0, 0, 0]






# End of file
