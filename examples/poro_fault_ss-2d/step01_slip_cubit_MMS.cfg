[pylithapp.metadata]
#  y
#  ^
#  |
#   --> x
#
#
# Fault has uniform slip of 2 m.
base = [pylithapp.cfg]
description = Poroelastic, coseismic prescribed slip with zero displacement Dirichlet boundary conditions.
authors = [Robert Walker]
keywords = [prescribed slip, poroelastic]
arguments = [step01_slip_cubit_MMS.cfg]
version = 1.0.0
pylith_version = [>=3.0, <4.0]

features = [
    Static simulation
    ]

# ----------------------------------------------------------------------
# Monitoring and parameter viewing.
# ----------------------------------------------------------------------
[pylithapp]
# You can view this file using the pylith_parameters application or
# online at https://geodynamics.github.io/pylith_parameters/.
dump_parameters.filename = output/step01_slip_cubit-parameters.json
problem.progress_monitor.filename = output/step01_slip_cubit_MMS-progress.txt

# Set the name of the problem that will be used to construct the
# output filenames. The default directory for output is 'output'.
problem.defaults.name = step01_slip_cubit_MMS

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------

[pylithapp.problem]
# We specify a time scale using a fake relaxation time that cooresponds
# to the time scale of the quasistatic simulations.
normalizer = spatialdata.units.NondimElasticQuasistatic
normalizer.length_scale = 1*m
normalizer.relaxation_time = 1.0*s
normalizer.shear_modulus = 1.0*m**-1*kg*s**-2

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
reader = pylith.meshio.MeshIOCubit
reader.filename = mesh_quad.exo

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
# Create an array of three materials, matching the number of blocks we
# created in CUBIT/Trelis.
[pylithapp.problem]
materials = [poroelastic_yneg, poroelastic_ypos]
materials.poroelastic_yneg = pylith.materials.Poroelasticity
materials.poroelastic_ypos = pylith.materials.Poroelasticity

[pylithapp.problem.materials]
poroelastic_yneg.bulk_rheology = pylith.materials.IsotropicLinearPoroelasticity
poroelastic_ypos.bulk_rheology = pylith.materials.IsotropicLinearPoroelasticity

[pylithapp.problem.materials.poroelastic_yneg]
# label_value must match the block values in the Cubit Exodus file.
description = Material to on the -y side of the fault
# label = poroelastic_yneg
label_value = 1

# We will use uniform material properties, so we use the UniformDB spatial database.
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.description = Poroelastic properties
db_auxiliary_field.values = [solid_density, fluid_density, fluid_viscosity, porosity, shear_modulus, drained_bulk_modulus, biot_coefficient, fluid_bulk_modulus, solid_bulk_modulus, isotropic_permeability]
db_auxiliary_field.data   = [  1.0*kg/m**3,   1.0*kg/m**3,        1.0*Pa*s,      0.1,        0.5*Pa,         1.3333333*Pa,              0.5,             0.5*Pa,             0.5*Pa,               1.0*m**2]

auxiliary_subfields.body_force.basis_order = 0
auxiliary_subfields.solid_density.basis_order = 0
auxiliary_subfields.fluid_density.basis_order = 0
auxiliary_subfields.fluid_viscosity.basis_order = 0
auxiliary_subfields.gravitational_acceleration.basis_order = 0
auxiliary_subfields.porosity.basis_order = 0
derived_subfields.cauchy_strain.basis_order = 1
derived_subfields.cauchy_stress.basis_order = 1

[pylithapp.problem.materials.poroelastic_yneg.bulk_rheology]

auxiliary_subfields.drained_bulk_modulus.basis_order = 0
auxiliary_subfields.shear_modulus.basis_order = 0
auxiliary_subfields.biot_coefficient.basis_order = 0
auxiliary_subfields.biot_modulus.basis_order = 0
auxiliary_subfields.isotropic_permeability.basis_order = 0

[pylithapp.problem.materials.poroelastic_ypos]
description = Material to on the +y side of the fault
# label = poroelastic_ypos
label_value = 2

db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.description = Poroelastic properties
db_auxiliary_field.values = [solid_density, fluid_density, fluid_viscosity, porosity, shear_modulus, drained_bulk_modulus, biot_coefficient, fluid_bulk_modulus, solid_bulk_modulus, isotropic_permeability]
db_auxiliary_field.data   = [  1.0*kg/m**3,   1.0*kg/m**3,        1.0*Pa*s,      0.1,        0.5*Pa,         1.3333333*Pa,              0.5,             0.5*Pa,             0.5*Pa,               1.0*m**2]

auxiliary_subfields.body_force.basis_order = 0
auxiliary_subfields.solid_density.basis_order = 0
auxiliary_subfields.fluid_density.basis_order = 0
auxiliary_subfields.fluid_viscosity.basis_order = 0
auxiliary_subfields.gravitational_acceleration.basis_order = 0
auxiliary_subfields.porosity.basis_order = 0
derived_subfields.cauchy_strain.basis_order = 1
derived_subfields.cauchy_stress.basis_order = 1

[pylithapp.problem.materials.poroelastic_ypos.bulk_rheology]

auxiliary_subfields.drained_bulk_modulus.basis_order = 0
auxiliary_subfields.shear_modulus.basis_order = 0
auxiliary_subfields.biot_coefficient.basis_order = 0
auxiliary_subfields.biot_modulus.basis_order = 0
auxiliary_subfields.isotropic_permeability.basis_order = 0

# ----------------------------------------------------------------------
# fault
# ----------------------------------------------------------------------
[pylithapp.problem]
interfaces = [fault]
interfaces.fault = pylith.faults.FaultCohesiveKinPoro

[pylithapp.problem.interfaces.fault]
# The `label` and `label_value` correspond to the name and tag of the
# physical group in the Gmsh Python script.
label = fault
label_value = 20

# We will use uniform material properties, so we use the UniformDB
# spatial database.
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.description = Poroelastic fault properties
db_auxiliary_field.values = [thickness, porosity,       beta_p, beta_sigma, fault_permeability_xx, fault_permeability_yy, fault_permeability_zz, fault_permeability_xy, fluid_viscosity]
db_auxiliary_field.data   = [    1.0*m,      0.1,   1.0*Pa**-1, 1.0*Pa**-1,              1.0*m**2,              1.0*m**2,              0.0*m**2,              0.0*m**2,        1.0*Pa*s]
# observers.observer.field_filter.basis_order = 1
#observers.observer.data_fields = [slip, lagrange_fault,fault_pressure]
#auxiliary_subfields.body_force.basis_order = 0


#observers.observer.data_fields = [slip]

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.problem]
# Define the total time for the simulation, the start time, and the
# initial time step size.
initial_dt = 1.0*s
start_time = 0.0*s
end_time = 2.0*s

# We specify a time scale using a fake relaxation time that cooresponds
# to the time scale of the quasistatic simulations.
normalizer = spatialdata.units.NondimElasticQuasistatic
normalizer.length_scale = 1*m
normalizer.relaxation_time = 1.0*s
normalizer.shear_modulus = 1.0*m**-1*kg*s**-2

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
bc = [bc_xneg_disp, bc_xpos_disp, bc_yneg_disp, bc_ypos_disp, 
      bc_xneg_pres, bc_xpos_pres, bc_yneg_pres, bc_ypos_pres]

bc.bc_xneg_disp = pylith.bc.DirichletTimeDependent
bc.bc_xpos_disp = pylith.bc.DirichletTimeDependent
bc.bc_yneg_disp = pylith.bc.DirichletTimeDependent
bc.bc_ypos_disp = pylith.bc.DirichletTimeDependent

bc.bc_xneg_pres = pylith.bc.DirichletTimeDependent
bc.bc_xpos_pres = pylith.bc.DirichletTimeDependent
bc.bc_yneg_pres = pylith.bc.DirichletTimeDependent
bc.bc_ypos_pres = pylith.bc.DirichletTimeDependent


[pylithapp.problem.bc.bc_xneg_disp]
label = boundary_xneg
# label_value = 24
field = displacement
constrained_dof = [0, 1]
db_auxiliary_field = spatialdata.spatialdb.SimpleDB
db_auxiliary_field.description = Dirichlet BC -x boundary
db_auxiliary_field.iohandler.filename = bc_xneg_disp.spatialdb
db_auxiliary_field.query_type = linear

[pylithapp.problem.bc.bc_xpos_disp]
label = boundary_xpos
# label_value = 23
field = displacement
constrained_dof = [0, 1]
db_auxiliary_field = spatialdata.spatialdb.SimpleDB
db_auxiliary_field.description = Dirichlet BC +x boundary
db_auxiliary_field.iohandler.filename = bc_xpos_disp.spatialdb
db_auxiliary_field.query_type = linear

[pylithapp.problem.bc.bc_yneg_disp]
label = boundary_yneg
# label_value = 22
field = displacement
constrained_dof = [0, 1]
db_auxiliary_field = spatialdata.spatialdb.SimpleDB
db_auxiliary_field.description = Dirichlet BC -y boundary
db_auxiliary_field.iohandler.filename = bc_yneg_disp.spatialdb
db_auxiliary_field.query_type = linear

[pylithapp.problem.bc.bc_ypos_disp]
label = boundary_ypos
# label_value = 21
field = displacement
constrained_dof = [0, 1]
db_auxiliary_field = spatialdata.spatialdb.SimpleDB
db_auxiliary_field.description = Dirichlet BC +y boundary
db_auxiliary_field.iohandler.filename = bc_ypos_disp.spatialdb
db_auxiliary_field.query_type = linear

[pylithapp.problem.bc.bc_xneg_pres]
label = boundary_xneg
# label_value = 24
field = pressure
use_time_history = True
use_initial = True
time_history = spatialdata.spatialdb.TimeHistory
time_history.description = time history
time_history.filename = time_history.timedb
constrained_dof = [0]
db_auxiliary_field = spatialdata.spatialdb.SimpleDB
db_auxiliary_field.description = Dirichlet BC -x boundary
db_auxiliary_field.iohandler.filename = bc_xneg_pres.spatialdb
db_auxiliary_field.query_type = linear

[pylithapp.problem.bc.bc_xpos_pres]
label = boundary_xpos
# label_value = 23
field = pressure
use_time_history = True
use_initial = True
time_history = spatialdata.spatialdb.TimeHistory
time_history.description = time history
time_history.filename = time_history.timedb
constrained_dof = [0]
db_auxiliary_field = spatialdata.spatialdb.SimpleDB
db_auxiliary_field.description = Dirichlet BC +x boundary
db_auxiliary_field.iohandler.filename = bc_xpos_pres.spatialdb
db_auxiliary_field.query_type = linear

[pylithapp.problem.bc.bc_yneg_pres]
label = boundary_yneg
# label_value = 22
field = pressure
use_time_history = True
use_initial = True
time_history = spatialdata.spatialdb.TimeHistory
time_history.description = time history
time_history.filename = time_history.timedb
constrained_dof = [0]
db_auxiliary_field = spatialdata.spatialdb.SimpleDB
db_auxiliary_field.description = Dirichlet BC -y boundary
db_auxiliary_field.iohandler.filename = bc_yneg_pres.spatialdb
db_auxiliary_field.query_type = linear

[pylithapp.problem.bc.bc_ypos_pres]
label = boundary_ypos
# label_value = 21
field = pressure
use_time_history = True
use_initial = True
time_history = spatialdata.spatialdb.TimeHistory
time_history.description = time history
time_history.filename = time_history.timedb
constrained_dof = [0]
db_auxiliary_field = spatialdata.spatialdb.SimpleDB
db_auxiliary_field.description = Dirichlet BC +y boundary
db_auxiliary_field.iohandler.filename = bc_ypos_pres.spatialdb
db_auxiliary_field.query_type = linear

# ----------------------------------------------------------------------
# fault
# ----------------------------------------------------------------------
[pylithapp.problem.interfaces.fault]
label = fault
label_value = 1

[pylithapp.problem.interfaces.fault.eq_ruptures.rupture]
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.description = Fault rupture auxiliary field spatial database
db_auxiliary_field.values = [initiation_time, final_slip_left_lateral, final_slip_opening]
db_auxiliary_field.data = [0.0*s, 2.0*m, 0.0*m]

# ----------------------------------------------------------------------
# initial conditions
# ----------------------------------------------------------------------
# We specify a single initial condition that is over the entire domain.
[pylithapp.problem]
ic = [domain]
ic.domain = pylith.problems.InitialConditionDomain

[pylithapp.problem.ic.domain]

db = spatialdata.spatialdb.SimpleDB
db.description = Initial conditions over domain
db.iohandler.filename = MMS_ic.spatialdb

# End of file
